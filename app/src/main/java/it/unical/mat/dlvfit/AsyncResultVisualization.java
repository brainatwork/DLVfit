package it.unical.mat.dlvfit;

/**
 * Created by Brain At Work on 28/08/2015.
 */

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.util.SparseArray;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ExpandableListView;

import java.util.ArrayList;


import it.unical.mat.dlvfit.resultelaborationlist.ExpandableListAdapter;
import it.unical.mat.dlvfit.resultelaborationlist.ResultGroup;

/**
 * Shows answer sets generated by embasp framework
 */
public class AsyncResultVisualization extends AppCompatActivity {
    private Toolbar mToolbar;

    protected static final String TAG = "ShowResult";

    private long time;
    // more efficient than HashMap for mapping integers to objects
    private SparseArray<ResultGroup> groups = new SparseArray<ResultGroup>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_elaboration_result);

        mToolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(mToolbar);
        getSupportActionBar().setDisplayShowHomeEnabled(true);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);

        ArrayList<String> atomList = new ArrayList<String>();
        ArrayList<Integer> answerSetSizeList = new ArrayList<Integer>();

        //get lists containing all atoms and answer sets size
        if (getIntent().getExtras() != null) {
            atomList = getIntent().getExtras().getStringArrayList(AsyncWorkoutElaboration.ATOMS_KEY);
            answerSetSizeList = getIntent().getExtras().getIntegerArrayList(AsyncWorkoutElaboration.ANSWERSETS_SIZE_KEY);
        }
        Log.i(TAG, "Showing asynchronous result");

        int answerSets = 0;
        int atomProcessed = 0;
        int item = 1; //counter for answer sets

        for(int i = 0; i < answerSetSizeList.size(); i++ ){
            ResultGroup group = new ResultGroup("Workout " + item);
            answerSets += answerSetSizeList.get(i);
            Log.i(TAG, "Answer Set:" + (i + 1));
            for(int j = atomProcessed; j < answerSets; j++){
                Log.i(TAG, "Atom: " + atomList.get(j));
                group.children.add(atomList.get(j));
                atomProcessed++;
            }
            groups.append(i, group);
            item++;
        }
        //populate expandable list view with elaborated workouts
        ExpandableListView listView = (ExpandableListView) findViewById(R.id.listView);
        ExpandableListAdapter adapter = new ExpandableListAdapter(this, groups);
        listView.setAdapter(adapter);

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_elaboration_result, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        switch (item.getItemId()) {
            case android.R.id.home:
                // back icon in action bar clicked;
                Intent backIntent = new Intent(this, MainActivity.class);
                backIntent.putExtra(MainActivity.FRAGMENT_INTENT_KEY, 2);
                backIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(backIntent);
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }

    @Override
    public void onBackPressed() {
        // back icon in action bar clicked;
        Intent backIntent = new Intent(this, MainActivity.class);
        backIntent.putExtra(MainActivity.FRAGMENT_INTENT_KEY, 2);
        backIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(backIntent);
        return;
    }
}

